name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Lint with flake8
      run: |
        flake8 --max-line-length=120 --ignore=D107,D200,D205,D400,D401 src
        flake8 --max-line-length=120 --ignore=D101,D102,D107,D200,D205,D400,D401,E402 tests

    - name: Type check with mypy
      run: |
        mypy src/cgen

    - name: Test with unittest (legacy)
      run: |
        python -m unittest discover -v tests

    - name: Test with pytest
      run: |
        pytest tests/ -v --tb=short

    - name: Test specific categories
      run: |
        pytest -m "unit" tests/ -v
        pytest -m "py2c" tests/ -v
        pytest -m "integration" tests/ -v

  benchmark:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev,benchmark]

    - name: Run performance benchmarks
      run: |
        pytest -m "benchmark" tests/ -v --tb=short

    - name: Run custom benchmark suite
      run: |
        python tests/benchmarks.py

  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Test with coverage
      run: |
        pytest --cov=src/cgen --cov-report=xml --cov-report=term-missing tests/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false